[Threat - NET-MAI-0001 Malware incoming mail - Rule]
disabled = true
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
action.correlationsearch.enabled = 1
action.notable.param.rule_title = NET-MAI-0001 Malware incoming mail
quantity = 0
dispatch.earliest_time = -15m
search = `ironport_summary` antivirus_status="positive" \
| rex field=recipient "@(?<r_domain>.*)" \
| rex field=message_info "mid\:(?<mid>\d+)\,\s*icid\:(?<icid>\d+)\,\s*dcid\:(?<dcid>\d+)"\
| search [ | inputlookup cim_corporate_email_domain_lookup | rename domain AS r_domain]\
| eval sender=src_user\
| table _time host action internal_message_id icid dcid recipient sender subject file_name signature message_size spam_status antivirus_status virus_vendor_category host inc_ip inc_interface
action.notable = 1
action.notable.param.severity = high
action.notable.param.drilldown_search = `ironport_summary` (src_user="$sender$" OR subject="$subject$" OR file_name="$file_name$" OR src="$inc_remote_ip$") | table _time action reason src_user recipient subject size spam_status antivirus_status virus_vendor_category icid first_mid dcid xref | rename first_mid AS internal_message_id, xref AS "related MID's" | lookup etg email AS recipient OUTPUT username naam functie
cron_schedule = 4-59/10 * * * *
action.notable.param.rule_description = A virus/malware mail containing "$virus_vendor_category$" has been send to recipient: "$recipient$", with attachment "$file_name$"
alert.suppress.fields = sender,recipient
alert.track = 0
enableSched = 1
relation = greater than
action.notable.param.drilldown_latest_offset = 86400
action.notable.param.security_domain = threat
dispatch.latest_time = +5m
action.customsearchbuilder.enabled = false
alert.suppress.period = 3600s
action.notable.param.verbose = 0
counttype = number of events
alert.suppress = 1
dispatch.rt_backfill = 1
description = Incoming mail with a virus or malware
action.notable.param.drilldown_name = View all mails from this sender, with this subject, with this attachment or from this src_ip for the past 7 days
action.notable.param.drilldown_earliest_offset = 604800
action.correlationsearch.label = NET-MAI-0001 Malware incoming mail

[Threat - NET-MAI-0003 Malware outgoing mail - Rule]
disabled = true
request.ui_dispatch_app = SplunkEnterpriseSecuritySuite
action.correlationsearch.enabled = 1
action.notable.param.rule_title = NET-MAI-0003 Malware outgoing mail
quantity = 0
dispatch.earliest_time = -10m
search = `ironport_summary` antivirus_status="positive" \
| rex field=sender "@(?<s_domain>.*)" \
| rex field=message_info "mid\:(?<mid>\d+)\,\s*icid\:(?<icid>\d+)\,\s*dcid\:(?<dcid>\d+)"\
| search [ | inputlookup cim_corporate_email_domain_lookup | rename domain AS s_domain]\
| eval sender=src_user\
| table _time host action internal_message_id icid dcid recipient sender subject file_name signature message_size spam_status antivirus_status virus_vendor_category host inc_ip inc_interface
action.notable = 1
action.notable.param.severity = high
action.notable.param.drilldown_search = `ironport_summary` (src_user="$sender$" OR subject="$subject$" OR file_name="$file_name$" OR src="$inc_remote_ip$") | table _time action reason src_user recipient subject size spam_status antivirus_status virus_vendor_category icid first_mid dcid xref | rename first_mid AS internal_message_id, xref AS "related MID's" | lookup etg email AS recipient OUTPUT username naam functie
cron_schedule = 4-59/10 * * * *
action.notable.param.rule_description = A virus/malware mail containing "$virus_vendor_category$" has been send from sender: "$sender$", with attachment "$file_name$"
alert.suppress.fields = sender,recipient
alert.track = 0
enableSched = 1
relation = greater than
action.notable.param.drilldown_latest_offset = 86400
action.notable.param.security_domain = threat
dispatch.latest_time = +5m
action.customsearchbuilder.enabled = false
alert.suppress.period = 3600s
action.notable.param.verbose = 0
counttype = number of events
alert.suppress = 1
dispatch.rt_backfill = 1
description = Outgoing mail with a virus or malware
action.notable.param.drilldown_name = View all mails from this sender, with this subject, with this attachment or from this src_ip for the past 7 days
action.notable.param.drilldown_earliest_offset = 604800
action.correlationsearch.label = NET-MAI-0002 Malware outgoing mail

[REPORT - Monthly - Number of spam mails]
disabled = true
display.general.type = visualizations
action.email = 1
action.ping.param.verbose = 0
action.email.sendpdf = 1
dispatch.earliest_time = -1mon@mon
action.email.inline = 1
schedule_window = 30
alert.severity = 1
display.visualizations.charting.axisY.scale = log
action.makestreams.param.verbose = 0
action.threat_add.param.verbose = 0
cron_schedule = 0 18 1 * *
action.email.message.report = The scheduled report: '$name$' has run.
action.email.sendcsv = 1
action.email.to = 
action.notable.param.verbose = 0
alert.track = 0
enableSched = 1
display.page.search.tab = visualizations
action.risk.param.verbose = 0
dispatch.latest_time = @mon
action.email.include.results_link = 0
auto_summarize.dispatch.earliest_time = -1d@h
action.email.sendresults = 1
action.nbtstat.param.verbose = 0
search = `ironport_log` "interim verdict using engine: CASE spam positive" \
| stats count by date_mday \
| sort date_mday \
| addcoltotals labelfield=date_mday label="Totaal" count\
| table date_mday, count
action.nslookup.param.verbose = 0
action.keyindicator.invert = 0
alert.suppress = 0
description = The number of spam mails per day of the month, including the total number of spam mails for that month
action.email.subject = Splunk: $name$

[REPORT - Monthly - Top 10 most mails received]
disabled = true
action.email = 1
action.ping.param.verbose = 0
action.email.sendpdf = 1
dispatch.earliest_time = -1mon@mon
action.email.inline = 1
schedule_window = 30
alert.severity = 1
action.makestreams.param.verbose = 0
action.threat_add.param.verbose = 0
cron_schedule = 0 18 1 * *
action.email.message.report = The scheduled report: '$name$' has run.
action.email.sendcsv = 1
action.email.to = 
action.notable.param.verbose = 0
alert.track = 0
enableSched = 1
action.risk.param.verbose = 0
dispatch.latest_time = @mon
action.email.include.results_link = 0
auto_summarize.dispatch.earliest_time = -1d@h
action.email.sendresults = 1
action.nbtstat.param.verbose = 0
search = `ironport_log` recipient=* NOT [ | inputlookup bulk_mail_recipient | rename mailaddress as recipient ] \
| eval recipient=lower(recipient)\
| rex field=recipient "@(?<r_domain>.*)"\
| search [ | inputlookup cim_corporate_email_domain_lookup | rename domain AS r_domain ] \
| stats count by recipient\
| eval recipient_count=mvzip(recipient, count, "[")\
| stats values(recipient_count) AS recipient_count, sum(count) AS total\
| mvexpand recipient_count\
| eval recipient_count=split(recipient_count, "["), recipient=mvindex(recipient_count,0), count=mvindex(recipient_count,1)\
| sort - count\
| head 10\
| eval received_vs_allReceivedMails=`formatNumber(count)`." / ".`formatNumber(total)`\
| table recipient received_vs_allReceivedMails
action.nslookup.param.verbose = 0
action.keyindicator.invert = 0
alert.suppress = 0
description = Top 10 accounts receiving the most email. The mail address that are in the bulk_mail_recipient lookup are excluded.
action.email.subject = Splunk: $name$

[REPORT - Monthly - Top 10 most mails send]
disabled = true
action.email = 1
action.ping.param.verbose = 0
action.email.sendpdf = 1
dispatch.earliest_time = -1mon@mon
action.email.inline = 1
schedule_window = 30
alert.severity = 1
action.makestreams.param.verbose = 0
action.threat_add.param.verbose = 0
cron_schedule = 0 18 1 * *
action.email.message.report = The scheduled report: '$name$' has run.
action.email.sendcsv = 1
action.email.to = 
action.notable.param.verbose = 0
alert.track = 0
enableSched = 1
action.risk.param.verbose = 0
dispatch.latest_time = @mon
action.email.include.results_link = 0
auto_summarize.dispatch.earliest_time = -1d@h
action.email.sendresults = 1
action.nbtstat.param.verbose = 0
search = `ironport_log` sender=* NOT [ | inputlookup bulk_mail_sender | rename mailaddress as sender ] \
| eval sender=lower(sender)\
| rex field=sender "@(?<s_domain>.*)"\
| search [ | inputlookup cim_corporate_email_domain_lookup | rename domain AS s_domain ] \
| stats count by sender\
| eval sender_count=mvzip(sender, count, "[")\
| stats values(sender_count) AS sender_count, sum(count) AS total\
| mvexpand sender_count\
| eval sender_count=split(sender_count, "["), sender=mvindex(sender_count,0), count=mvindex(sender_count,1)\
| sort -count\
| head 10\
| eval send_vs_allSendMails=`formatNumber(count)`." / ".`formatNumber(total)`\
| table sender send_vs_allSendMails
action.nslookup.param.verbose = 0
action.keyindicator.invert = 0
alert.suppress = 0
description = Top 10 accounts sending the most email. The mail address that are in the bulk_mail_sender lookup are excluded.
action.email.subject = Splunk: $name$

[REPORT - Monthly - Virus Malware mails]
disabled = true
action.email = 1
action.ping.param.verbose = 0
action.email.sendpdf = 1
dispatch.earliest_time = -1mon@mon
action.email.inline = 1
schedule_window = 30
alert.severity = 1
action.makestreams.param.verbose = 0
action.threat_add.param.verbose = 0
cron_schedule = 0 18 1 * *
action.email.message.report = The scheduled report: '$name$' has run.
action.email.sendcsv = 1
action.email.to = 
action.notable.param.verbose = 0
alert.digest_mode = 1
alert.track = 0
enableSched = 1
action.risk.param.verbose = 0
dispatch.latest_time = @mon
action.email.include.results_link = 0
auto_summarize.dispatch.earliest_time = -1d@h
action.email.sendresults = 1
action.nbtstat.param.verbose = 0
search = `ironport_log`\
| stats min(_time) AS _time, values(recipient) AS recipient, values(sender) AS sender, values(subject) AS subject, values(message_size) AS message_size, values(antivirus_status) AS antivirus_status, values(virus_vendor_category) AS virus_vendor_category, values(reason) AS reason, values(file_name) AS file_name, values(icid) AS icid, values(dcid) AS dcid BY internal_message_id host \
| stats count, values(_time) AS _time, values(recipient) AS recipient, values(sender) AS sender, values(subject) AS subject, values(message_size) AS message_size, values(antivirus_status) AS antivirus_status, values(virus_vendor_category) AS virus_vendor_category, values(reason) AS reason, values(file_name) AS file_name, values(dcid) AS dcid BY internal_message_id icid host \
| search (sender=* OR recipient=*) antivirus_status="positive"\
| eval time=_time, time=strftime(time, "%F %T") \
| addcoltotals labelfield=time label="Maand Totaal" count\
| table time host sender recipient subject file_name virus_vendor_category count
action.nslookup.param.verbose = 0
action.keyindicator.invert = 0
alert.suppress = 0
description = Overview of all the virus/malware mails send and recieved last month
action.email.subject = Splunk: $name$

[SUMMARY - Fill Ironport summary index]
disabled = true
action.ping.param.verbose = 0
schedule_priority = highest
dispatch.earliest_time = -10m
search = `ironport_log` (TERM(ESA_CONSOLIDATED_LOG_EVENT) OR "New SMTP DCID" OR TERM(antivirus) OR TERM(rewritten) OR "Domains for which SDR is requested") linecount=1 \ 
| eval ESADCID=coalesce(ESADCID,dcid),  \ 
    message_info=if(isnotnull(ESASPFVerdict), "SPF: ".ESASPFVerdict."|DKIM: ".ESADKIMVerdict."|DMARC: ".ESADKIMVerdict."|ESADCID: ".ESADCID,message_info),  \ 
    internal_message_id=coalesce(internal_message_id,ESAMID), \ 
    first_mid=if(internal_message_id!="", internal_message_id, ""), first_mid=if(prev_internal_message_id!="", prev_internal_message_id, first_mid), \ 
    act=lower(act), \ 
    mail_server=host \ 
| eventstats values(out_remote_ip) AS dest by ESADCID  \ 
| rex max_match=0 field=ESAAttachmentDetails "(?m)(?:^{|\}\}, )(?:\'|\")(?<file_name_amp>.+?)(?:(?:\'|\")\:)" \ 
| rex max_match=0 field=ESAAttachmentDetails "(?m)(?<!\{)\'(?<file_hash_amp>[a-z0-9]{64})\'" \ 
| rex max_match=0 field=ESAAttachmentDetails "(?m)(?<!\{)(?:\: |\, )\'(?<file_verdict_amp>[A-Z ]+?)\'(?!\:)" \ 
| stats values(startTime) AS startTime, max(endTime) AS endTime, latest(act) AS action, values(dest) AS dest, values(file_hash) AS file_hash, values(file_name) AS file_name, values(file_hash_amp) AS file_hash_amp, values(file_name_amp) AS file_name_amp, values(file_verdict_amp) AS file_verdict_amp, values(message_info) AS message_info, values(duser) AS recipient, values(ESAMsgSize) AS size, values(ESAHeloIP) AS src, values(suser) AS suser, values(src_user) AS src_user, values(msg) AS subject, values(url) AS url, values(vendor_product) AS vendor_product, values(ExternalMsgID) AS xref, values(host) AS orig_host, values(signature) AS signature, values(reason) AS reason, values(ESAAVVerdict) AS antivirus_status, values(virus_vendor_category) AS virus_vendor_category, values(ESAASVerdict) AS spam_status, values(AV_product) AS AV_product BY internal_message_id mail_server \ 
| eval src_user=case(isnotnull(suser),suser, mvcount(src_user)>1,mvfilter(!match(mvdedup(src_user),"Not Present")), true(),src_user) \ 
| where isnotnull(recipient) AND isnotnull(src_user) AND isnotnull(action) AND ((isnotnull(dest) AND match(action,"delivered")) OR !match(action,"delivered"))  \ 
| rex field=src_user "(?:prvs.*\\=|)(?<src_user>.*)" \ 
| rex field=src_user "@(?<src_user_domain>[^\>]*)"  \ 
| eval recipient=replace(recipient,";","|"),  \ 
    recipient_count=mvcount(split(recipient,"|")),  \ 
    recipient_domain=mvdedup(mvmap(split(recipient,"|"),replace(recipient,"([^\@]+\@)(.*)","\2"))),  \ 
    recipient_domain=mvfilter(!match(lower(recipient_domain),"[a-z0-9\-_\.]*\.\.\.")),  \ 
    recipient_domain=mvjoin(recipient_domain,"|"), \ 
    message_info=mvjoin(message_info,"|"),  \ 
    file_name=mvjoin(file_name,"|"),  \ 
    file_hash=mvjoin(file_hash,"|"),  \ 
    file_name_amp=mvjoin(file_name_amp,"|"),  \ 
    file_hash_amp=mvjoin(file_hash_amp,"|"),  \ 
    file_verdict_amp=mvjoin(file_verdict_amp,"|"),  \ 
    orig_host=mvjoin(orig_host,"|"),  \ 
    startTime=strptime(startTime,"%a %b %d %k:%M:%S %Y"),  \ 
    endTime=strptime(endTime,"%a %b %d %k:%M:%S %Y"), \ 
    duration=round(endTime-startTime,0), \ 
    action=case(lower(action)=="dropped","blocked", true(),action), \ 
    signature=case(lower(antivirus_status)=="positive",virus_vendor_category, (isnull(signature) OR len(signature)==0) AND isnotnull(reason),reason, true(),signature), \ 
    signature=mvjoin(signature,"|"), \ 
    user=case(lower(antivirus_status)=="positive" AND match(recipient_domain,`corporate_email_domains`),recipient, lower(antivirus_status)=="positive" AND match(src_user_domain,`corporate_email_domains`),src_user, true(),null()), \ 
    vendor_product=case(lower(antivirus_status)=="positive",vendor_product." ".AV_product, true(),vendor_product) \ 
| search NOT  \ 
    [| search `ironport_summary` earliest=-10m \ 
    | stats c by internal_message_id src  \ 
    | table internal_message_id src]  \ 
| table startTime, endTime, AV_product, action, antivirus_status, dest, duration, file_hash, file_name, file_hash_amp, file_name_amp, file_verdict_amp, internal_message_id, mail_server, message_info, orig_host, recipient, recipient_count, recipient_domain, signature, size, spam_status, src, src_user, src_user_domain, subject, url, vendor_product, virus_vendor_category, xref \ 
| collect `ironport_summary` \ 
action.nslookup.param.verbose = 0
cron_schedule = 2-57/5 * * * *
action.threat_add.param.verbose = 0
alert.track = 0
enableSched = 1
action.email.useNSSubject = 1
action.risk.param.verbose = 0
dispatch.latest_time = now
action.send2uba.param.verbose = 0
action.makestreams.param.verbose = 0
auto_summarize.dispatch.earliest_time = -1d@h
action.nbtstat.param.verbose = 0
action.notable.param.verbose = 0
action.keyindicator.invert = 0
alert.suppress = 0
description = Search to fill the ironport_summary index
